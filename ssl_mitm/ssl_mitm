#!/usr/bin/env bash

FILENAME=socat
LOCAL_PORT=4443
REMOTE_HOST=www.google.com
REMOTE_PORT=443
TOR=false
SUDO=false

while getopts 'P:d:p:hts' flag; do
    case "${flag}" in
        h)
            echo "Usage:"
            echo "-h    show brief help"
            echo "-P    port to listen on       Default: $LOCAL_PORT"
            echo "-d    host to connnect to     Default: $REMOTE_HOST"
            echo "-p    port to connect to      Default: $REMOTE_PORT"
            echo "-s    run with sudo           Default: $SUDO"
            echo "-t    use tor connect         Default: $TOR"
            exit 0
            ;;
        P) LOCAL_PORT=${OPTARG} ;;
        d) REMOTE_HOST=${OPTARG} ;;
        p) REMOTE_PORT=${OPTARG} ;;
        s) SUDO=true ;;
        t) TOR=true ;;
    esac
done

CMD_SERVER="socat -v -x openssl-listen:$LOCAL_PORT,reuseaddr,cert=$PWD/$FILENAME.pem,cafile=$PWD/$FILENAME.crt,verify=0,fork TCP:localhost:31337"
CMD_CLIENT="socat -v -x TCP-LISTEN:31337,reuseaddr,fork openssl-connect:$REMOTE_HOST:$REMOTE_PORT,verify=0"

if [ $TOR == true ]; then
    CMD_CLIENT="proxychains $CMD_CLIENT"
fi
if [ $SUDO == true ]; then
    CMD_SERVER="sudo $CMD_SERVER"
fi
if [ $LOCAL_PORT -lt 1024 ]; then
    if [ $SUDO == false ]; then
        echo "sudo required for listening on ports below 1024"
        exit
    fi
fi

if [ ! -f $FILENAME.pem ]; then
    openssl genrsa -out $FILENAME.key 2048
    openssl req -new -key $FILENAME.key -x509 -days 365 -out $FILENAME.crt
    cat $FILENAME.key $FILENAME.crt >$FILENAME.pem
    openssl dhparam -out dhparams.pem 2048
    cat dhparams.pem >> $FILENAME.pem
fi

while [ true ]; do
    echo $CMD_CLIENT
    $CMD_CLIENT &
    $PID_CLIENT=$$

    echo $CMD_SERVER
    $CMD_SERVER
    $PID_SERVER=$$

    test $? -gt 128 && break
done

if [ $PID_CLIENT ]; then
    kill -9 $PID_CLIENT
fi

if [ $PID_SERVER ]; then
    if [ $SUDO == true ]; then
        sudo kill -9 $PID_SERVER
    else
        kill -9 $PID_SERVER
    fi
fi
